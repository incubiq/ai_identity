@startuml
title Issue flow

actor Holder as holder
participant "Holder Cloud Agent" as holderAgent
participant VDR
participant "Issuer Cloud Agent" as issuerAgent
actor Issuer as issuer

note over holderAgent, issuerAgent #aqua
    It is assumed that a connection already exists between the holder and the issuer.
    It is also assumed that they both have an existing Prism DID.
end note
|||
== Create and send credential offer ==
|||
issuer -> issuerAgent: Create new credential offer\n""POST /issue-credentials/credential-offers""\n""{format, connectionId, claims, issuingDID, schemaId?}""
issuerAgent -> VDR: Fetch JSON Schema
issuerAgent -> issuerAgent: Verify provided claims against schema
issuerAgent -> issuerAgent: Create issue credential state record
issuerAgent --> issuer: Issue credential record {id, state}
note over issuerAgent: state=OfferPending
|||

== Send credential offer over DIDComm ==
|||
issuerAgent -> holderAgent: ""CredentialOffer"" message (includes domain/challenge)
holderAgent -> holderAgent: Create issue credential state record
holderAgent --> issuerAgent: OK
note over holderAgent: state=OfferReceived
/ note over issuerAgent: state=OfferSent
|||

== Review and accept credential offer ==
|||
holder -> holderAgent: Retrieve credential records\n""GET /issue-credentials/records""
holderAgent --> holder: record list
|||
holder -> holderAgent: Accept credential offer\n""POST /issue-credentials/records/{id}/accept-offer""\n""{subjectId=did:prism:xxx}""
note right #pink: Here the holder specifies the subject DID\nto which the credential should be issued
holderAgent --> holder: OK
note over holderAgent: state=RequestPending
|||

== Generate and send credential request ==
|||
holderAgent -> holderAgent: Sign the domain/challenge received from\nthe issuer with subject Prism DID
holderAgent -> holderAgent: Create credential request
note over holderAgent: state=RequestGenerated
|||
holderAgent -> issuerAgent: RequestCredential message (with DID ownership proof)
issuerAgent --> holderAgent: OK
note over holderAgent: state=RequestSent
/ note over issuerAgent: state=RequestReceived
|||

== Generate and send credential ==
|||
alt automaticIssuance=true
issuerAgent -> issuerAgent: Automatically approve credential request
else automaticIssuance=false
issuer -> issuerAgent: Explicitly approve credential request\n""POST /issue-credentials/records/{id}/issue-credential""
end
note over issuerAgent: state=CredentialPending
|||
issuerAgent -> issuerAgent: Generate credential signed with Issuing Prism DID and\nissued to Subject Prism DID
note over issuerAgent: state=CredentialGenerated
|||
issuerAgent -> holderAgent: ""IssueCredential"" message (includes JWT credential)
holderAgent --> issuerAgent: OK
note over issuerAgent: state=CredentialSent
/ note over holderAgent: state=CredentialReceived
|||
@enduml
