openapi: 3.0.3
servers:
  - url: /0.1.0
info:
  description: See https://docs.godiddy.com/ for additional documentation.
  version: 0.1.0
  title: GoDiddy.com - API Reference
  contact:
    email: contact@danubetech.com
tags:
  - name: Universal Resolver
  - name: Universal Registrar
  - name: Wallet Service
  - name: Version Service
paths:
  /universal-resolver/identifiers/{identifier}:
    get:
      summary: Resolve a DID / dereference a DID URL.
      description:
        <p>This endpoint resolves a DID. As input it takes the DID, plus DID resolution
        <a href="https://www.w3.org/TR/did-core/#did-resolution-options">options</a>. The output is a DID
        document
        in one of the supported representations, plus metadata. The same endpoint can also be used to dereference a DID
        URL. In this case, the output is a DID document, or part of a DID document, or some other resource identified
        by the DID URL.</p>
        <p>See the <a href="https://w3c-ccg.github.io/did-resolution/">DID Resolution</a>
        specification for additional details.</p>
      operationId: resolve
      tags:
        - Universal Resolver
      parameters:
        - in: path
          required: true
          name: identifier
          schema:
            type: string
          description: The DID to be resolved, or the DID URL to be dereferenced.
          examples:
            example1:
              value: did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx
              description: A DID using the `sov` method.
            example2:
              value: did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w
              description: A DID using the `ion` method.
            example3:
              value: did:ebsi:z25ZZFS7FweHsm9MX2Qvc6gc
              description: A DID using the `ebsi` method.
            example4:
              value: did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx#key-1
              description: A DID URL with a fragment.
            example5:
              value: did:ebsi:z25ZZFS7FweHsm9MX2Qvc6gc#keys-1
              description: A DID URL with a fragment.
        - in: header
          required: false
          name: Accept
          schema:
            type: string
          description: The requested media type of the DID document representation or DID resolution result. See <a href="https://www.w3.org/TR/did-core/#representations">https://www.w3.org/TR/did-core/#representations</a> and <a href="https://w3c-ccg.github.io/did-resolution/#did-resolution-result">https://w3c-ccg.github.io/did-resolution/#did-resolution-result</a>.
          examples:
            application/did+json:
              value: application/json
              description: Media type of a DID document (JSON representation).
            application/did+ld+json:
              value: application/did+ld+json
              description: Media type of a DID document (JSON-LD representation).
            application/ld+json;profile="https://w3id.org/did-resolution":
              value: application/ld+json;profile="https://w3id.org/did-resolution"
              description: Media type of a DID resolution result (JSON-LD representation).
      responses:
        '200':
          description: successfully resolved!
          content:
            application/did+json:
              schema:
                type: object
                description: The DID document (JSON representation).
                example: {
                  "id": "did:sov:WRfXPg8dantKVubE3HX8pw",
                  "verificationMethod": [
                    {
                      "id": "did:sov:WRfXPg8dantKVubE3HX8pw#key-1",
                      "type": "Ed25519VerificationKey2018",
                      "publicKeyBase58": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV"
                    }
                  ]
                }
            application/did+ld+json:
              schema:
                type: object
                description: The DID document (JSON-LD representation).
                example: {
                  "@context": "https://www.w3.org/ns/did/v1",
                  "id": "did:sov:WRfXPg8dantKVubE3HX8pw",
                  "verificationMethod": [
                    {
                      "id": "did:sov:WRfXPg8dantKVubE3HX8pw#key-1",
                      "type": "Ed25519VerificationKey2018",
                      "publicKeyBase58": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV"
                    }
                  ]
                }
            application/ld+json;profile="https://w3id.org/did-resolution":
              schema:
                $ref: '#/components/schemas/UniversalResolver.ResolutionResult'
        '400':
          description: invalid input!
        '410':
          description: successfully resolved (deactivated)!
          content:
            application/did+json:
              schema:
                type: object
                description: The deactivated DID document (JSON representation).
            application/did+ld+json:
              schema:
                type: object
                description: The deactivated DID document (JSON-LD representation).
            application/ld+json;profile="https://w3id.org/did-resolution":
              schema:
                $ref: '#/components/schemas/UniversalResolver.ResolutionResult'
        '500':
          description: error!
  /universal-resolver/properties:
    get:
      summary: Retrieve configuration properties.
      description:
        <p>This endpoint returns a map of the configuration properties of the DID Resolver, including of its
        drivers.</p>
      operationId: universalResolverGetProperties
      tags:
        - Universal Resolver
      responses:
        '200':
          description: Success.
          content:
            application/did+json:
              schema:
                type: object
                description: A map of properties.
  /universal-resolver/methods:
    get:
      summary: Retrieve supported DID methods.
      description:
        <p>This endpoint returns a list of DID methods supported by the DID Resolver.</p>
      operationId: universalResolverGetMethods
      tags:
        - Universal Resolver
      responses:
        '200':
          description: Success.
          content:
            application/did+json:
              schema:
                type: array
                items:
                  type: string
                description: The list of supported DID methods.
                example: ["btcr","sov","v1","key"]
  /universal-resolver/testIdentifiers:
    get:
      summary: Retrieve a map of test identifiers.
      description:
        <p>This endpoint returns a map of test identifiers that can be resolved by the DID Resolver,
        grouped by DID method.</p>
      operationId: universalResolverGetTestIdentifiers
      tags:
        - Universal Resolver
      responses:
        '200':
          description: Success.
          content:
            application/did+json:
              schema:
                type: object
                description: A map of test identifiers, grouped by DID method.
                example: { "btcr": ["did:btcr:xz35-jznz-q9yu-ply", "did:btcr:xkrn-xz7q-qsye-28p"], "sov": ["did:sov:WRfXPg8dantKVubE3HX8pw"] }
  /universal-registrar/create:
    post:
      summary: Create a DID.
      description:
        <p>This endpoint creates a DID. As input it takes the DID, a DID document, plus optional DID registration
        <a href="https://identity.foundation/did-registration/#options">options</a> and
        <a href="https://identity.foundation/did-registration/#secret">secrets</a>
        needed to create a DID. The output is a state object that represents the current state of the DID creation
        process.</p>
        <p>See the <a href="https://identity.foundation/did-registration/#create">DID Registration</a>
        specification for additional details.</p>
      operationId: create
      tags:
        - Universal Registrar
      parameters:
        - in: query
          required: true
          name: method
          schema:
            type: string
          description: The requested DID method for the operation.
          example: key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniversalRegistrar.CreateRequest'
      responses:
        '200':
          description:
            The request was successful, but the DID may not be fully created yet, as indicated by the
            "didState.state" and "jobId" output fields. Additional state information plus metadata are available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniversalRegistrar.CreateState'
        '201':
          description:
            The DID has been successfully created, as indicated by the "didState.state" output field.
            Additional state information (including the created DID) plus metadata are available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniversalRegistrar.CreateState'
        '400':
          description:
            A problem with the input fields has occurred. Additional state information plus metadata may be
            available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniversalRegistrar.CreateState'
        '500':
          description:
            An internal error has occurred. Additional state information plus metadata may be
            available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniversalRegistrar.CreateState'
  /universal-registrar/update:
    post:
      summary: Update a DID.
      description:
        <p>This endpoint updates a DID. As input it takes the existing DID, a DID document, plus optional DID registration
        <a href="https://identity.foundation/did-registration/#options">options</a> and
        <a href="https://identity.foundation/did-registration/#secret">secrets</a>
        needed to update a DID. The output is a state object that represents the current state of the DID update
        process.</p>
        <p>See the <a href="https://identity.foundation/did-registration/#update">DID Registration</a>
        specification for additional details.</p>
      operationId: update
      tags:
        - Universal Registrar
      parameters:
        - in: query
          required: true
          name: method
          schema:
            type: string
          description: The requested DID method for the operation.
          example: btcr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniversalRegistrar.UpdateRequest'
      responses:
        '200':
          description:
            The request was successful, and the DID may or may not be fully updated yet, as indicated by the
            "didState.state" and "jobId" output fields. Additional state information plus metadata are available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniversalRegistrar.UpdateState'
        '400':
          description:
            A problem with the input fields has occurred. Additional state information plus metadata may be
            available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniversalRegistrar.UpdateState'
        '500':
          description:
            An internal error has occurred. Additional state information plus metadata may be
            available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniversalRegistrar.UpdateState'
  /universal-registrar/deactivate:
    post:
      summary: Deactivate a DID.
      description:
        <p>This endpoint deactivates a DID. As input it takes the existing DID, plus optional DID registration
        <a href="https://identity.foundation/did-registration/#options">options</a> and
        <a href="https://identity.foundation/did-registration/#secret">secrets</a>
        needed to deactivate a DID. The output is a state object that represents the current state of the DID deactivation
        process.</p>
        <p>See the <a href="https://identity.foundation/did-registration/#deactivate">DID Registration</a>
        specification for additional details.</p>
      operationId: deactivate
      tags:
        - Universal Registrar
      parameters:
        - in: query
          required: true
          name: method
          schema:
            type: string
          description: The requested DID method for the operation.
          example: btcr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniversalRegistrar.DeactivateRequest'
      responses:
        '200':
          description:
            The request was successful, and the DID may or may not be fully deactivated yet, as indicated by the
            "didState.state" and "jobId" output fields. Additional state information plus metadata are available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniversalRegistrar.DeactivateState'
        '400':
          description:
            A problem with the input fields has occurred. Additional state information plus metadata may be
            available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniversalRegistrar.DeactivateState'
        '500':
          description:
            An internal error has occurred. Additional state information plus metadata may be
            available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniversalRegistrar.DeactivateState'
  /universal-registrar/properties:
    get:
      summary: Retrieve configuration properties.
      description:
        <p>This endpoint returns a map of the configuration properties of the DID Registrar, including of its
        drivers.</p>
      operationId: universalRegistrarGetProperties
      tags:
        - Universal Registrar
      responses:
        '200':
          description: Success.
          content:
            application/did+json:
              schema:
                type: object
                description: A map of properties.
  /universal-registrar/methods:
    get:
      summary: Retrieve supported DID methods.
      description:
        <p>This endpoint returns a list of DID methods supported by the DID Registrar.</p>
      operationId: universalRegistrarGetMethods
      tags:
        - Universal Registrar
      responses:
        '200':
          description: Success.
          content:
            application/did+json:
              schema:
                type: array
                items:
                  type: string
                description: The list of supported DID methods.
                example: ["btcr","sov","v1","key"]
  /wallet-service/keys:
    get:
      summary: Get key(s)
      description:
        <p>This endpoint returns a list of public keys from the wallet service that match the input parameters.</p>
        <p>Note that there may be multiple keys for a given DID.</p>
      operationId: getKeys
      tags:
        - Wallet Service
      parameters:
        - in: query
          name: controller
          schema:
            type: string
            format: uri
          description: The controller of the key(s) to retrieve.
          example: "did:sov:WRfXPg8dantKVubE3HX8pw"
        - in: query
          name: url
          schema:
            type: string
            format: uri
          description: The URL of the key(s) to retrieve.
          example: "did:sov:WRfXPg8dantKVubE3HX8pw#keys-1"
        - in: query
          name: type
          schema:
            type: string
          description: The type of the key(s) to retrieve.
          example: "Ed25519"
        - in: query
          name: purpose
          schema:
            type: string
          description: The purpose(s) of the key(s) to retrieve.
          example: "authentication"
        - in: query
          name: limit
          schema:
            type: integer
            format: int64
          description: The limit (total number) of keys to retrieve.
          example: 1
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WalletService.Key'
                description: The list of key(s).
                example: [
                  {
                    "id": "f25bed83-570c-45a4-b2fa-07a0df2a25d5",
                    "timestamp": 1633531154167,
                    "controller": "did:key:z6MkhES5w7ViszdQZBfKmzgFM8XVXy6DxVgBZzQCJdrcBuGz",
                    "url": "did:key:z6MkhES5w7ViszdQZBfKmzgFM8XVXy6DxVgBZzQCJdrcBuGz#z6MkhES5w7ViszdQZBfKmzgFM8XVXy6DxVgBZzQCJdrcBuGz",
                    "type": "Ed25519",
                    "purpose": "['authentication','assertionMethod','capabilityDelegation','capabilityInvocation']",
                    "key": {
                      "kty": "OKP",
                      "crv": "Ed25519",
                      "x": "KUnc6ztOeq1mR4UHxY2vmtJQZDk_VikOBTyPvrAu-c8"
                    },
                    "keyMetadata": null
                  },
                  {
                    "id": "618acb93-0c7d-4a0e-bb78-32745e436404",
                    "timestamp": 1633531154259,
                    "controller": "did:key:z6MkhES5w7ViszdQZBfKmzgFM8XVXy6DxVgBZzQCJdrcBuGz",
                    "url": "did:key:z6MkhES5w7ViszdQZBfKmzgFM8XVXy6DxVgBZzQCJdrcBuGz#z6LStgSrgnA1qWUdiEBcMEduv29jX1n8zmbgw1hcaewouhQV",
                    "type": "X25519",
                    "purpose": "['keyAgreement']",
                    "key": {
                      "kty": "OKP",
                      "crv": "X25519",
                      "x": "_Khr2RW7e-QAHqVx5RjDSshHomTjNDBCLeaJSQklgHI"
                    },
                    "keyMetadata": null
                  }
                ]
          description: The request was successful, and the list of public key(s) has been retrieved.
        '400':
          description: A problem with the input fields has occurred.
        '500':
          description: An internal error has occurred.
    post:
      summary: Import key
      description:
        <p>This endpoint imports a new private/public key in JWK into the wallet service.</p>
        <p>Note that when a DID is created using the <a href="https://api.dev.godiddy.com/#tag/Universal-Registrar">Universal Registrar</a>,
        its keys are automatically imported into the wallet service.</p>
      operationId: importKey
      tags:
        - Wallet Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletService.Key'
        description: The new key to import.
      responses:
        '201':
          description: The request was successful, and the new key has been imported.
        '400':
          description: A problem with the input fields has occurred.
        '409':
          description: This key already exists in the wallet service.
        '500':
          description: An internal error has occurred.
  /wallet-service/keys/{id}:
    get:
      summary: Get key
      description:
        <p>This endpoint returns a private/public key with a given internal identifier from the wallet service.</p>
      operationId: getKey
      tags:
        - Wallet Service
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The internal identifier of the key to retrieve.
          example: "386fd0bf-6bf2-4063-a1b0-42927caf1886"
        - in: query
          name: exportPrivate
          required: false
          schema:
            type: boolean
          description: An optional flag to indicate whether private key data should be included in the response.
          example: true
      responses:
        '200':
          description: The request was successful, and the key has been retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletService.Key'
        '400':
          description: A problem with the input fields has occurred.
        '404':
          description: No key was found with the given identifier.
        '500':
          description: An internal error has occurred.
    delete:
      summary: Delete key
      description:
        <p>This endpoint deletes a private/public key from the wallet service.</p>
        <p>Note that deleting a key from the wallet service does not deactivate the corresponding DID. This should be
        done before deleting keys.</p>
        <p>Also note that deleting a key may render a DID uncontrollable, unless the key was exported before.</a>
      operationId: deleteKey
      tags:
        - Wallet Service
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The internal identifier of the key to delete.
          example: "386fd0bf-6bf2-4063-a1b0-42927caf1886"
      responses:
        '204':
          description: The request was successful, and the key has been deleted.
        '400':
          description: A problem with the input fields has occurred.
        '404':
          description: No key was found with the given identifier.
        '500':
          description: An internal error has occurred.
  /wallet-service/keys/sign:
    post:
      summary: Sign with key
      description:
        <p>This endpoint signs an arbitrary unsigned payload using a private key from the wallet service.</p>
      operationId: signWithKey
      tags:
        - Wallet Service
      parameters:
        - in: query
          name: id
          schema:
            type: string
            format: uuid
          description: The internal identifier of the key to use for signing.
          example: "386fd0bf-6bf2-4063-a1b0-42927caf1886"
        - in: query
          name: url
          schema:
            type: string
            format: uri
          description: The URL of the key to use for signing.
          example: "did:sov:WRfXPg8dantKVubE3HX8pw#keys-1"
        - in: query
          name: algorithm
          schema:
            type: string
          description: The cryptographic algorithm (JWA) to use for signing.
          example: "EdDSA"
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: byte
        description: The payload to sign.
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                type: string
                format: byte
          description: The request was successful, and the payload has been signed.
        '400':
          description: A problem with the input fields has occurred.
        '404':
          description: No key was found with the given identifier.
        '500':
          description: An internal error has occurred.
  /wallet-service/keys/verify:
    post:
      summary: Verify with key
      description:
        <p>This endpoint verifies an arbitrary signed payload using a public key from the wallet service.</p>
      operationId: verifyWithKey
      tags:
        - Wallet Service
      parameters:
        - in: query
          name: id
          schema:
            type: string
            format: uuid
          description: The internal identifier of the key to use for verifying.
          example: "386fd0bf-6bf2-4063-a1b0-42927caf1886"
        - in: query
          name: url
          schema:
            type: string
            format: uri
          description: The URL of the key to use for verifying.
          example: "did:sov:WRfXPg8dantKVubE3HX8pw#keys-1"
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: byte
        description: The payload to verify.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: The request was successful, and the payload has been verified.
        '400':
          description: A problem with the input fields has occurred.
        '404':
          description: No key was found with the given identifier.
        '500':
          description: An internal error has occurred.
  /wallet-service/controllers:
    get:
      summary: Get controller(s)
      description:
        <p>This endpoint returns a list of controllers from the wallet that match the input parameters.</p>
      operationId: getControllers
      parameters:
        - in: query
          name: type
          schema:
            type: string
          description: The type of the controller(s) to retrieve.
          example: "Ed25519"
        - in: query
          name: purpose
          schema:
            type: string
          description: The purpose(s) of the controller(s) to retrieve.
          example: "authentication"
        - in: query
          name: limit
          schema:
            type: integer
            format: int64
          description: The limit (total number) of controllers to retrieve.
          example: 1
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                description: The list of controller(s).
                example: [
                  "did:key:z6MkhES5w7ViszdQZBfKmzgFM8XVXy6DxVgBZzQCJdrcBuGz",
                  "did:key:z6MkiD3mSCJZFefR9GXY3bwa6cdxkLyUJ6a7HRFnU3YPNDp2",
                  "did:sov:danube:C7EGTrTaUruV98HPoEFP9n",
                  "did:v1:test:nym:z6MknvTVgWvRUHt5wcFQzRSbTReN95cKwo3EAbd1vEmUzUtt"
                ]
          description: The request was successful, and the list of controller(s) has been retrieved.
        '400':
          description: A problem with the input fields has occurred.
        '404':
          description: No controllers were found that match the input parameters.
        '500':
          description: An internal error has occurred.
  /version-service/didrecords:
    get:
      summary: Get DID Record(s).
      description: This endpoint gets matching DID Records. As input, it takes multiple optional parameters. The output is an array of DID Records if there are matches, empty otherwise. <p> A DID Record represents a DID resolution at a specific point in time, with additional metadata attached to it. Results are sorted by versionTime in descending order. **limit** and **offset** parameters can be used in possible combinations unless stated otherwise.
      operationId: getDidRecords
      tags:
        - Version Service
      parameters:
        - in: query
          name: id
          schema:
            type: string
            format: uuid
            example: 8ff29f08-ede2-426d-b127-b95c3fa43192
          description: Unique id of the DID Record to get. When this parameter is set, no other parameter is allowed.
        - in: query
          name: did
          schema:
            type: string
            format: did
            example: did:ion:test:EiDnCmF6bjRF4GEB49PwGi3_AuOmXXBsSV4vor1fkNQc2w
          description: A DID to get its DID Records. This parameter can be combined with **versionTime** to get DID Records up until that time or with **versionTimeFrom** and **versionTimeTo** to get DID Records in a given interval.
        - in: query
          name: method
          schema:
            type: string
            example: jolo
          description: A DID method to get its records. This parameter can be combined with **versionTime** to get DID Records of the given method up to (inclusive) the given time.
        - in: query
          name: versionId
          schema:
            type: string
            example: 22
          description: Gets the DID Record of given **did** with given versionId. Usage only allowed with combination of the **did** field. No other parameters are allowed.
        - in: query
          name: versionTime
          schema:
            type: integer
            format: int64
            example: 1610582180000
          description: Time in milliseconds. When used alone, this gets the records up to (inclusive) given time.
        - in: query
          name: versionTimeFrom
          schema:
            type: integer
            format: int64
          description: Epoch time in milliseconds. **versionTime** must be null and **versionTimeTo** must be given to use time-range function.
          example: 1610582180000
        - in: query
          name: versionTimeTo
          schema:
            type: integer
            format: int64
            example: 1610582180000
          description: Epoch time in milliseconds. **versionTime** must be null and **versionTimeFrom** must be given to use time-range function.
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set.
        - in: query
          name: limit
          schema:
            type: integer
          description: Maximum number of items to return.
      responses:
        '200':
          description: DID record(s) successfully retrieved!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VersionService.DidRecord'
                description: The DID record(s).
        '400':
          description: invalid input!
        '404':
          description: DID record(s) not found!
        '500':
          description: error!
  /version-service/didrecords/findInIdentifier:
    get:
      summary: Find DID records(s) matching identifiers with given term
      description: This endpoint searches the given term in DID Records' identifiers, i.e., DIDs.
      operationId: findInIdentifier
      tags:
        - Version Service
      parameters:
        - in: query
          name: term
          required: true
          schema:
            type: string
            example: abc
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set.
        - in: query
          name: limit
          schema:
            type: integer
          description: Maximum number of items to return.
      responses:
        '200':
          description: DID Record(s) successfully retrieved!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VersionService.DidRecord'
                description: The DID Record(s).
        '400':
          description: invalid input!
        '404':
          description: DID record(s) not found!
        '500':
          description: error!
  /version-service/didrecords/methods:
    get:
      summary: Get a list of DID methods supported by the Version Service.
      operationId: methods
      tags:
        - Version Service
      responses:
        '200':
          description: DID Method list is successfully retrieved!
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '500':
          description: error!
  /version-service/didrecords/count:
    get:
      summary: Get a number of DID methods matching to given method.
      operationId: countByMethod
      parameters:
        - in: query
          name: method
          schema:
            type: string
      responses:
        '200':
          description: Number of the DID Records for given method is retrieved!
          content:
            application/json:
              schema:
                type: integer
                format: int64
                description: The matching did record count for the given method.
        '500':
          description: error!
  /version-service/diddocuments:
    get:
      summary: Get DID document(s)
      operationId: getDidDocuments
      tags:
        - Version Service
      parameters:
        - in: query
          name: id
          schema:
            type: string
            format: uuid
        - in: query
          name: did
          schema:
            type: string
            format: did
        - in: query
          name: method
          schema:
            type: string
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set.
        - in: query
          name: limit
          schema:
            type: integer
          description: Maximum number of items to return.
      responses:
        '200':
          description: DID document(s) successfully retrieved!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VersionService.DidDocument'
                description: The DID document(s).
        '400':
          description: invalid input!
        '404':
          description: DID document(s) not found!
        '500':
          description: error!
  /version-service/diddocuments/count:
    get:
      summary: Count DID document(s) matching to given path-value
      operationId: countWithinDidDocuments
      tags:
        - Version Service
      parameters:
        - in: query
          name: path
          schema:
            type: array
            items:
              type: string
        - in: query
          name: value
          schema:
            type: object
      responses:
        '200':
          description: DID document(s) successfully retrieved!
          content:
            application/json:
              schema:
                type: integer
                format: int64
                description: The matching did document count.
        '400':
          description: invalid input!
        '404':
          description: DID document(s) not found!
        '500':
          description: error!
  /version-service/diddocuments/search:
    get:
      summary: Find DID document(s) matching to given path-value
      operationId: findInDidDocumentContents
      tags:
        - Version Service
      parameters:
        - in: query
          name: path
          schema:
            type: array
            items:
              type: string
        - in: query
          name: value
          schema:
            type: object
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set.
        - in: query
          name: limit
          schema:
            type: integer
          description: Maximum number of items to return.
      responses:
        '200':
          description: DID document(s) successfully retrieved!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VersionService.DidDocument'
                description: The DID document(s).
        '400':
          description: invalid input!
        '404':
          description: DID document(s) not found!
        '500':
          description: error!
  /version-service/diddocuments/metadata/count:
    get:
      summary: Count DID document metadata matching to given path-value
      operationId: countWithinDidDocumentMetadata
      tags:
        - Version Service
      parameters:
        - in: query
          name: path
          schema:
            type: array
            items:
              type: string
        - in: query
          name: value
          schema:
            type: object
      responses:
        '200':
          description: DID document(s) successfully retrieved!
          content:
            application/json:
              schema:
                type: integer
                format: int64
                description: The matching did document metadata count.
        '400':
          description: invalid input!
        '404':
          description: DID document(s) not found!
        '500':
          description: error!
  /version-service/diddocuments/metadata/search:
    get:
      summary: Find DID document metadata matching to given path-value
      operationId: findInDidDocumentMetadata
      tags:
        - Version Service
      parameters:
        - in: query
          name: path
          schema:
            type: array
            items:
              type: string
        - in: query
          name: value
          schema:
            type: object
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set.
        - in: query
          name: limit
          schema:
            type: integer
          description: Maximum number of items to return.
        - in: query
          name: sort
          schema:
            type: boolean
          description: Sort descending according to record time, ignored in full-text search.
      responses:
        '200':
          description: DID document(s) successfully retrieved!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VersionService.DidDocument'
                description: The DID document(s).
        '400':
          description: invalid input!
        '404':
          description: DID document(s) not found!
        '500':
          description: error!
components:
  schemas:
    UniversalResolver.ResolutionResult:
      description: The DID resolution result.
      type: object
      additionalProperties: false
      properties:
        didDocument:
          type: object
          example: {
            "@context": "https://www.w3.org/ns/did/v1",
            "id": "did:sov:WRfXPg8dantKVubE3HX8pw",
            "verificationMethod": [
              {
                "id": "did:sov:WRfXPg8dantKVubE3HX8pw#key-1",
                "type": "Ed25519VerificationKey2018",
                "publicKeyBase58": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV"
              }
            ]
          }
        didResolutionMetadata:
          type: object
        didDocumentMetadata:
          type: object
    UniversalRegistrar.CreateRequest:
      description: Input fields for the create operation.
      type: object
      additionalProperties: false
      properties:
        jobId:
          description:
            This input field is used to keep track of an ongoing DID creation process.
            See <a href="https://identity.foundation/did-registration/#jobid">https://identity.foundation/did-registration/#jobid</a>.
          type: string
          example: 6d85bcd0-2ea3-4288-ab00-15afadd8a156
        options:
          description:
            This input field contains an object with various options for the DID create operation, such as the network where the DID should be created.
            See <a href="https://identity.foundation/did-registration/#options">https://identity.foundation/did-registration/#options</a>.
          type: object
          example: {"chain": "testnet"}
        secret:
          description:
            This input field contains an object with DID controller keys and other secrets needed for performing the DID create operation.
            See <a href="https://identity.foundation/did-registration/#secret">https://identity.foundation/did-registration/#secret</a>.
          type: object
          example: {"seed": "72WGp7NgFR1Oqdi8zlt7jQQ434XR0cNQ"}
        didDocument:
          description:
            This input field contains either a complete DID document, or an incremental change (diff) to a DID document.
            See <a href="https://identity.foundation/did-registration/#diddocument">https://identity.foundation/did-registration/#diddocument</a>.
          type: object
    UniversalRegistrar.UpdateRequest:
      description: Input fields for the update operation.
      type: object
      additionalProperties: false
      required:
        - did
      properties:
        jobId:
          description:
            This input field is used to keep track of an ongoing DID update process.
            See <a href="https://identity.foundation/did-registration/#jobid">https://identity.foundation/did-registration/#jobid</a>.
          type: string
          example: 6d85bcd0-2ea3-4288-ab00-15afadd8a156
        did:
          description:
            This input field indicates the DID that is the target of the DID update operation.
          type: string
          example: "did:sov:WRfXPg8dantKVubE3HX8pw"
        options:
          description:
            This input field contains an object with various options for the DID update operation.
            See <a href="https://identity.foundation/did-registration/#options">https://identity.foundation/did-registration/#options</a>.
          type: object
        secret:
          description:
            This input field contains an object with DID controller keys and other secrets needed for performing the DID update operation.
            See <a href="https://identity.foundation/did-registration/#secret">https://identity.foundation/did-registration/#secret</a>.
          type: object
        didDocumentOperation:
          description:
            This input field indicates which update operation should be applied to a DID’s associated DID document.
            See <a href="https://identity.foundation/did-registration/#diddocumentoperation">https://identity.foundation/did-registration/#diddocumentoperation</a>.
          type: array
          items:
            type: string
        didDocument:
          description:
            This input field contains either a complete DID document, or an incremental change (diff) to a DID document.
            See <a href="https://identity.foundation/did-registration/#diddocument">https://identity.foundation/did-registration/#diddocument</a>.
          type: array
          items:
            type: object
    UniversalRegistrar.DeactivateRequest:
      description: Input fields for the deactivate operation.
      type: object
      additionalProperties: false
      required:
        - did
      properties:
        jobId:
          description:
            This input field is used to keep track of an ongoing DID deactivation process.
            See <a href="https://identity.foundation/did-registration/#jobid">https://identity.foundation/did-registration/#jobid</a>.
          type: string
          example: 6d85bcd0-2ea3-4288-ab00-15afadd8a156
        did:
          description:
            This input field indicates the DID that is the target of the DID deactivation operation.
          type: string
          example: "did:sov:WRfXPg8dantKVubE3HX8pw"
        options:
          description:
            This input field contains an object with various options for the DID deactivate operation.
            See <a href="https://identity.foundation/did-registration/#options">https://identity.foundation/did-registration/#options</a>.
          type: object
        secret:
          description:
            This input field contains an object with DID controller keys and other secrets needed for performing the DID deactivate operation.
            See <a href="https://identity.foundation/did-registration/#secret">https://identity.foundation/did-registration/#secret</a>.
          type: object
    UniversalRegistrar.CreateState:
      description: The state after a create operation.
      type: object
      additionalProperties: false
      required:
        - didState
      properties:
        jobId:
          type: string
          example: 6d85bcd0-2ea3-4288-ab00-15afadd8a156
        didState:
          $ref: '#/components/schemas/UniversalRegistrar.DidState'
        didRegistrationMetadata:
          type: object
        didDocumentMetadata:
          type: object
    UniversalRegistrar.UpdateState:
      description: The state after an update operation.
      type: object
      additionalProperties: false
      required:
        - didState
      properties:
        jobId:
          type: string
          example: 6d85bcd0-2ea3-4288-ab00-15afadd8a156
        didState:
          $ref: '#/components/schemas/UniversalRegistrar.DidState'
        didRegistrationMetadata:
          type: object
        didDocumentMetadata:
          type: object
    UniversalRegistrar.DeactivateState:
      description: The state after a deactivate operation.
      type: object
      additionalProperties: false
      required:
        - didState
      properties:
        jobId:
          type: string
          example: 6d85bcd0-2ea3-4288-ab00-15afadd8a156
        didState:
          $ref: '#/components/schemas/UniversalRegistrar.DidState'
        didRegistrationMetadata:
          type: object
        didDocumentMetadata:
          type: object
    UniversalRegistrar.DidState:
      description: The current state of a DID.
      type: object
      additionalProperties: true
      properties:
        state:
          type: string
          example: "finished"
        did:
          type: string
          example: "did:sov:WRfXPg8dantKVubE3HX8pw"
        secret:
          type: object
          example: {
            "verificationMethod": [{
              "id": "did:sov:WRfXPg8dantKVubE3HX8pw#key-1",
              "type": "JsonWebKey2020",
              "privateKeyJwk": {
                "kty": "OKP",
                "d": "NzJXR3A3TmdGUjFPcWRpOHpsdDdqUVE0MzRYUjBjTlE",
                "crv": "Ed25519",
                "x": "jpIKKU2b77lNXKTNW2NGvw1GUMjU6v_l_tLJAH5uYz0"
              }
            }]
          }
        didDocument:
          type: object
    WalletService.Key:
      type: object
      required:
        - type
        - key
      properties:
        id:
          type: string
          format: uuid
          example: "f25bed83-570c-45a4-b2fa-07a0df2a25d5"
        timestamp:
          type: integer
          format: int64
          example: 1633531154167
        controller:
          type: string
          format: uri
          example: "did:key:z6MkhES5w7ViszdQZBfKmzgFM8XVXy6DxVgBZzQCJdrcBuGz"
        url:
          type: string
          format: uri
          example: "did:key:z6MkhES5w7ViszdQZBfKmzgFM8XVXy6DxVgBZzQCJdrcBuGz#z6MkhES5w7ViszdQZBfKmzgFM8XVXy6DxVgBZzQCJdrcBuGz"
        type:
          type: string
          example: "Ed25519"
        purpose:
          type: string
          example: "['authentication','assertionMethod','capabilityDelegation','capabilityInvocation']"
        key:
          type: object
          example: {
            "kty": "OKP",
            "crv": "Ed25519",
            "x": "KUnc6ztOeq1mR4UHxY2vmtJQZDk_VikOBTyPvrAu-c8"
          }
        keyMetadata:
          type: object
          example: {
          }
    VersionService.DidRecord:
      type: object
      required:
        - did
        - method
      properties:
        id:
          type: string
          format: uuid
          example: 278dad34-e30b-4159-9ac0-ff5ccc0fdd81
        timestamp:
          type: integer
          format: int64
          example: 1624014333778
          description: Record's epoch time in milliseconds
        did:
          type: string
          format: did
          example: did:sov:WRfXPg8dantKVubE3HX8pw
        method:
          type: string
          example: sov
          description: DID Method name
        didDocument:
          $ref: '#/components/schemas/VersionService.DidDocument'
        didVersion:
          $ref: '#/components/schemas/VersionService.DidVersion'
        didState:
          $ref: '#/components/schemas/VersionService.DidState'
    VersionService.DidDocument:
      type: object
      required:
        - documentContent
      properties:
        didRecordId:
          type: string
          format: uuid
          example: 8ff29f08-ede2-426d-b127-b95c3fa43192
        did:
          type: string
          format: did
          example: did:sov:WRfXPg8dantKVubE3HX8pw
        documentContent:
          type: string
          format: json
          description: Must be in form of json string.
        documentMetadata:
          type: string
          format: json
          description: Must be in form of json string.
    VersionService.DidVersion:
      type: object
      properties:
        didRecordId:
          type: string
          format: uuid
          example: 8ff29f08-ede2-426d-b127-b95c3fa43192
        did:
          type: string
          format: did
          example: did:sov:WRfXPg8dantKVubE3HX8pw
        versionId:
          type: string
          example: 18
        versionTime:
          type: integer
          format: int64
          example: 1624014333778
          description: Version's epoch time in milliseconds
        versionMetadata:
          type: string
          format: json
          description: Must be in form of json string.
    VersionService.DidState:
      type: object
      required:
        - state
      properties:
        didRecordId:
          type: string
          format: uuid
          example: 8ff29f08-ede2-426d-b127-b95c3fa43192
        did:
          type: string
          format: did
          example: did:sov:WRfXPg8dantKVubE3HX8pw
        state:
          type: string
          example: pending
        stateTime:
          type: integer
          format: int64
          example: 1624014333778
        stateMetadata:
          type: string
          format: json
          description: Must be in form of json string.
