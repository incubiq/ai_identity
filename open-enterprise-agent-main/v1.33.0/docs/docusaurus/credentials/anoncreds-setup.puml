@startuml
autonumber

participant "Verifiable\nData Registry" as L
participant "Schema Publisher" as SP
participant Issuer as I
participant Holder as H

Note over L, H: Schema Publisher: Publish Schema

SP ->> L: Publish Schema (Schema)
L ->> I: Schema ID,\nSchema Transaction ID
Note over L, SP #pink: schema = issuerId, name, version, attribute names \n**issuerId MUST adhere to Issuer identifiers rules**
Note over L, SP #pink: **Schema ID** and schema storage format is defined \nby the used AnonCreds method. \nThe same case is for other AnonCreds objects too.
/ Note over H #pink: ðŸ’¡The "Verifier" role is\nomitted in this diagram, \nsince it is not required\nfor the setup

Note over L, H: Issuer: Create, Store and Publish CredDef

I ->> I: create_and_store_credential_def\n(Schema, tag, support_revocation)
Note right of I: store public /\nprivate keys and\n correctness proof
Note right of I #pink: **Correctness proof** is included in credential offers \nto allow holders to validate that public \npart of credential definition belongs to the issuer.
I ->> L: Publish CredDef (CredDef)

Note over L, H: Issuer: Create, Store and Publish Revocation Registry (Optional)

I ->> I: create_and_store_revoc_reg (intCredDef)
Note right of I: get keys
Note right of I: store revoc_reg_def,\nrevoc_reg_accum,\npriv_key,\ntails_generator
I ->> L: Publish RevReg \n(revoc_reg_id,\nrevoc_reg_def_json,\nrevoc_reg_entry_json)

Note over L, H: Holder: Create and Store Link Secret

H ->> H: anoncreds_prover_create_link_secret
H ->> H: store link secret
Note over H #pink: **link secret** is a sufficiently random unique identifier (ie. uuid v4). \n\nAllows credentials issued to a Holder to be bound to that Holder \nand presented without revealing any unique identifier related to \nholder, which could be used to correlate credentials by verifiers. \n\nIf lost, Holder won't be able to generate proofs for credentials \nissued for that link_secret.

@enduml
